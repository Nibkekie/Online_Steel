import { Controller, Post, Req, Res } from '@nestjs/common';
import { Request, Response } from 'express';
import { LineService } from './line.service';
import { validateSignature } from '@line/bot-sdk';
import { productListFlex } from '../utils/flex';

@Controller('line')
export class LineController {
  constructor(private readonly line: LineService) {}

  @Post('webhook')
  async webhook(@Req() req: Request & { rawBody?: Buffer }, @Res() res: Response) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏à‡∏≤‡∏Å LINE (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢)
    const signature = req.headers['x-line-signature'] as string;
    if (!signature || !req.rawBody ||
        !validateSignature(req.rawBody, process.env.CHANNEL_SECRET!, signature)) {
      return res.status(401).send('Invalid signature');
    }

    const events = (req.body as any).events || [];
    await Promise.all(events.map(async (event: any) => {
      // 1) ‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (Rich menu ‚Üí Action=Send message "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
      if (event.type === 'message' && event.message.type === 'text') {
        const text = (event.message.text || '').trim();

        if (text === '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' || /^(‡πÄ‡∏°‡∏ô‡∏π|menu)$/i.test(text)) {
          return this.line.replyFlex(event.replyToken, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', productListFlex);
        }
        if (/^(‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠|order)$/i.test(text)) {
          return this.line.replyText(event.replyToken,
            '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ + ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ‡πÄ‡∏ä‡πà‡∏ô "RB9 x 10"\n‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" ‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π');
        }
        return this.line.replyText(event.replyToken,
          '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö üôå ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ "‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠');
      }

      // 2) (‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å) ‡∏ñ‡πâ‡∏≤‡∏ï‡∏±‡πâ‡∏á Rich menu ‡πÄ‡∏õ‡πá‡∏ô Postback
      if (event.type === 'postback' && event.postback?.data === 'PRODUCT_MENU') {
        return this.line.replyFlex(event.replyToken, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', productListFlex);
      }
    }));

    res.status(200).send('OK');
  }
}
